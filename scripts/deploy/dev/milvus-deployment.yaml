# ETCD Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etcd
  template:
    metadata:
      labels:
        app: etcd
    spec:
      containers:
      - name: etcd
        image: quay.io/coreos/etcd:v3.5.5
        command: 
        - etcd
        - -advertise-client-urls=http://0.0.0.0:2379
        - -listen-client-urls=http://0.0.0.0:2379
        - --data-dir
        - /etcd
        env:
        - name: ETCD_AUTO_COMPACTION_MODE
          value: "revision"
        - name: ETCD_AUTO_COMPACTION_RETENTION
          value: "1000"
        - name: ETCD_QUOTA_BACKEND_BYTES
          value: "4294967296"
        - name: ETCD_SNAPSHOT_COUNT
          value: "50000"
        ports:
        - containerPort: 2379
        volumeMounts:
        - name: etcd-data
          mountPath: /etcd
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -ec
            - etcdctl endpoint health
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 20
          failureThreshold: 3
      volumes:
      - name: etcd-data
        persistentVolumeClaim:
          claimName: etcd-pvc
---
# MinIO Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio:RELEASE.2023-03-20T20-16-18Z
        command:
        - minio
        - server
        - /minio_data
        - --console-address
        - ":9001"
        env:
        - name: MINIO_ACCESS_KEY
          value: "minioadmin"
        - name: MINIO_SECRET_KEY
          value: "minioadmin"
        ports:
        - containerPort: 9000
        - containerPort: 9001
        volumeMounts:
        - name: minio-data
          mountPath: /minio_data
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 20
          failureThreshold: 3
      volumes:
      - name: minio-data
        persistentVolumeClaim:
          claimName: minio-pvc
---
# Milvus Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: milvus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: milvus
  template:
    metadata:
      labels:
        app: milvus
    spec:
      containers:
      - name: milvus
        image: milvusdb/milvus:v2.4.15
        command: ["milvus", "run", "standalone"]
        env:
        - name: ETCD_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              name: milvus-config
              key: ETCD_ENDPOINTS
        - name: MINIO_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: milvus-config
              key: MINIO_ADDRESS
        ports:
        - containerPort: 19530
        - containerPort: 9091
        volumeMounts:
        - name: milvus-data
          mountPath: /var/lib/milvus
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9091
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 20
          failureThreshold: 3
      volumes:
      - name: milvus-data
        persistentVolumeClaim:
          claimName: milvus-pvc
